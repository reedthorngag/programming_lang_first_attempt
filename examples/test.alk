
func test2(a: i64): i64 {
    return a+2;
}

func test(a: i64, b: i64, c: i8): i64 {
    return b+test2(a)+c+3;
}

const test5: u16;
const test4: u64 = 5;

func main(): null {
    var default: i32 = 2;
    const test: i16 = 5 + 1 + 3;
    var test2: i32 = default += 5 - 2 + (8 >> 1 + 2); // this is a single line comment test
    printNum(test2);
    test2 += (5+1) - 3; // hello
    printNum(test2);
    test(default,(5+2),100);
    test2 = 5 + (3 - 4 + 1);
    test(test2+8,0,0);
    ;;;
    printNum(test2+=8);
    /* this is a multi line
    comment test
    */
    printNum(test2);
    printNum(1500);
    var a: char = 'h';
    printNum(1500);
    var b: i64 = 0x80085;
    printNum(b);
    b = 0b111_000_111;
    printNum(b); // 0x1c7
    const test3: string = "he\"llo world";
    printLine(test3);
    test2 <<= 5;
    printNum(1600);
    const test4: i64 = 5 > 5;
    if (test3 >= 5) {
        printNum(test4);
        printLine("it worked!");
    } else {
        printLine("hiiii!!!");
    }

    {
        var hello: i32 = 6;
        printNum(hello);
        {
            var hello2:i8 = 8;
            printNum(hello2);
            printNum(hello);
            printLine("testing contexts");
        }
    }

    var hello: i64 = 8;
    printNum(hello);

    // expected output 0x14 (aka 20)
    printNum(global test(5,5,5));

    hello = 0;
    while (!false) {
        if (hello>=5)
            break;
        else printNum(0x696969);
        
        const testStr: string = "this is so cool!";
        printNum(hello);
        printLine(testStr);
        ++hello;
        continue;
    }

    printLine("I'm amazing");
    while (hello--) printNum(hello);

    while (hello<5) hello++;
    if (hello<5) hello++;
    if (hello<5) ++hello;
    printNum(hello);
    while (hello) --hello;
    printNum(hello);

    printLine("hi?");
    printNum(15%3);
    printNum(10/2);

    //var f: f32 = 0.5;
    var test5: i32 = 5;

    var test6: u64 = 0xff;
    //test5 = (:i32)test6;

    printNum(test5);

    test6 = (:u64)0.5;
}

